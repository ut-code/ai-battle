openapi: 3.0.3
info:
  title: Code vs Code
  version: 1.0.0
servers:
  - url: https://utcode.net/code-vs-code
paths:
  /user:
    get:
      tags:
        - user
      summary: Get user by ID
      parameters:
        - name: id
          in: query
          description: user id
          required: true
          schema:
            type: integer
      responses:
        '200':
          description: user object
          content:
            application/json:
              schema: 
                  $ref: '#/components/schemas/User'
    put:
      tags:
        - user
      summary: Update user
      parameters: []
      requestBody:
        description: new user object
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/User'
      responses:
        '200':
          description: new user object
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/User'
    post:
      tags:
        - user
      summary: Create user
      parameters: []
      requestBody:
        description: user name
        content:
          application/json:
            schema:
              type: object
              properties:
                name:
                  type: string
              example:
                name: ユーティー太郎
      responses:
        '200':
          description: user object
          content:
            application/json:
              schema: 
                  $ref: '#/components/schemas/User'
  /program:
    post:
      tags:
        - program
      summary: Upload program
      parameters: []
      requestBody:
        description: id and program
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Program'
      responses:
        '200':
          description: uploaded
    get:
      tags:
        - program
      summary: Get all programs
      parameters: []
      responses:
        '200':
          description: array of programs
          content:
            application/json:
              schema: 
                  type: array
                  items:
                    $ref: '#/components/schemas/Program'
    delete:
      tags:
      - program
      summary: Delete program
      parameters:
        - name: id
          in: query
          description: user id
          required: true
          schema:
            type: integer
      responses:
        '200':
          description: deleted
  /result:
    post:
      tags:
        - result
      summary: Upload game results
      parameters: []
      requestBody:
        description: result
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Result'
      responses:
        '200':
          description: uploaded
components:
  schemas:
    User:
      type: object
      required:
        - id
      properties:
        id:
          type: integer
        name:
          type: string
        rank:
          type: integer
      example:
          id: 1
          name: ユーティー太郎
          rank: 24
    Program:
      type: object
      required:
        - id
        - code
      properties:
        id:
          type: integer
        code:
          type: string
    Result:
      type: object
    